基于请求与响应模式的，无连接、无状态的应用层协议
客户端发起请求，服务端响应请求。
无连接：一次TCP只有一次HTTP请求和响应
无状态：不会记录请求之间的状态。
cookie：记录客户端状态，记录在浏览器，一串文本，响应头：set-cookie 给客户设置cookie，以及cookie的作用范围 请求头：cookie 发送cookie给服务端，服务端根据cookie来确定用户状态
session：记录在服务器，依赖于cookie传递。

常见的请求方法
get：向服务器请求数据。输入url和点击链接都是get。
post：向服务器提交数据，登录，注册，上传文件。
put：上传文件，无安全验证，一般禁用
delete：删除文件，无安全验证，一般禁用
head：和get类似，但是响应报文没有响应体
options：预检请求，一个是发生了跨域，第二个是发生了复杂请求

什么情况属于跨域：协议、域名、端口 有一个不同就属于跨域
复杂请求：请求方法不是get、post、head并且请求方法是post的时候请求体类型，不是文本、表单、form-data，存在自定义的请求头

get和post区别：
数据的提交位置不同：get在url，post在请求体
长度限制：get有长度限制，post没有
数据类型：get传递ascii码字符，post没有限制。

https的加密过程
1、客户端向服务器发送请求，主要是随机值1和客户端支持的加密算法
2、服务器响应请求，发送随机值2和协商好的加密算法
3、服务器向客户端发送证书，包含了服务器的公钥
4、客户端验证证书的有效性，证书有问题，浏览器会给出提醒。证书没问题，生成随机值3（预主密钥）
5、客户端组合随机值1、随机值2、预主密钥行成会话密钥。用证书中的公钥加密预主密钥，发送给服务器。
6、服务器用私钥解密得到预主密钥，组装随机值1、随机值2、预主密钥形成会话秘钥，会话秘钥和客户端相同
7、双方用会话秘钥加密一条数据发送给对方，验证对方能否正常接收加密的信息
